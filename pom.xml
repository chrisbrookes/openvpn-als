<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.adito</groupId>
    <artifactId>adito</artifactId>
    <name>Adito</name>

    <version>0.9.2-SNAPSHOT</version>
    
    <packaging>pom</packaging>
    
    <inceptionYear>2008</inceptionYear>
    
    <description>
			Adito is a web-based SSL VPN server.
    </description>
    
    <scm>
        <connection>scm:svn:https://adito.svn.sourceforge.net/svnroot/adito/adito/trunk</connection>
    </scm>
    
    <licenses>
        <license>
            <name>GPLv2</name>
            <comments>All Adito core components and Maverick-* use the GPLv2 license</comments>
        </license>

        <license>
            <name>Others</name>
            <comments>Some parts of Adito (e.g. the wrapper) are under permissive BSD/MIT style licenses.</comments>
        </license>

        <license>
            <name>Hypersonic SQL license</name>
            <comments>Adito's internal database (HSQLDB) uses it's own license</comments>
        </license>

        <license>
            <name>Apache license 2.0</name>
            <comments></comments>
        </license>
    </licenses>
    
    <organization>
        <name>Adito Open Source Team</name>
        <url>http://adito.sourceforge.net/</url>
    </organization>

<!-- Who were the original developers on this project? Current developers? People should
     be added below. -->
    
    <developers>
        <developer>
            <id>svetzal</id>
            <name>Steven Vetzal</name>
            <email>steve@threewisemen.ca</email>
            <organization>Three Wise Men</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>

        <developer>
            <id>mattock</id>
            <name>Samuli Sepp√§nen</name>
            <email>samuli.seppanen@gmail.com</email>
            <organization>Tietoteema Oy</organization>
            <roles>
                <role>Developer</role>
		<role>Coordinator</role>
		<role>Translator</role>
            </roles>
            <timezone>+2</timezone>
        </developer>

        <developer>
            <id>plunden</id>
            <name>Pasi Lunden</name>
            <email>pasi.lunden@tietoteema.fi</email>
            <organization>Tietoteema.fi</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
    </developers>

    <!--
	<contributors>
		<contributor>
			<name></name>
			<email></email>
			<organization></organization>
			<roles>
			</roles>
			<timezone></timezone>
		</contributor>
	</contributors>
    -->

		<issueManagement>
			<system>SourceForge</system>
			<url>https://sourceforge.net/tracker2/?group_id=228294</url>
		</issueManagement>

		<mailingLists>
			<mailingList>
				<name>adito-user</name>
				<archive>https://sourceforge.net/mailarchive/forum.php?forum_name=adito-user</archive>
			</mailingList>
			<mailingList>
				<name>adito-devel</name>
				<archive>https://sourceforge.net/mailarchive/forum.php?forum_name=adito-devel</archive>
			</mailingList>
		</mailingLists>

    <modules>

	<!-- Shared extension assembly descriptor:
	
	http://maven.apache.org/plugins/maven-assembly-plugin/examples/sharing-descriptors.html 
	
	-->

	<module>extension-assembly-descriptor</module>

	<!-- Infrastructure modules -->
	<module>maverick-util</module>
	<module>maverick-ssl</module>
	<module>maverick-multiplex</module>
	<module>maverick-crypto</module>

	<!-- The actual webapp -->
	<module>webapp</module>

	<!-- Authentication extensions -->
	<module>unix</module>
	<module>activedirectory</module>
	<module>ldap</module>
	<module>radius</module>
	<module>pam</module>

	<!-- Clientcerts module fails to build because
	     it depends on com.adito.boot
	<module>clientcerts</module>
	-->

	<!-- Other extensions -->
	<module>applications</module>
	<module>webforwards</module>
	<module>tunnels</module>
	<module>networkplaces</module>

	<!-- Agent modules -->
	<module>ui</module>
	<module>agent</module>
	<module>agent-awt</module>
	<module>agent-swt</module>
	<module>agent-api</module>

	<!-- Assemble the Agent extension -->
	<module>agent-assembly</module>

	<!-- Assemble a deployable version of ALS  -->
	<module>als-assembly</module>

    </modules>
    
    <repositories>

	<!-- Sandboxed Apache Commons VFS components are required by networkplaces module -->

        <repository>
            <id>Apache maven2 repository</id>
            <name>Apache maven2 repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
        </repository>

	<repository>
	   <id>central</id>
	   <name>Maven Repository Switchboard</name>
	   <layout>default</layout>
	   <url>http://repo1.maven.org/maven2</url>
	   <snapshots>
		<enabled>false</enabled>
	   </snapshots>
	</repository>

	<repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2</url>
            <layout>default</layout>
        </repository>

        <!-- DEAD
        <repository>
            <id>Codehaus Snapshot Repo</id>
            <url>http://snapshots.repository.codehaus.org/</url>
            <snapshots>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        -->
        <repository>
            <id>OpenQA</id>
            <url>http://maven.openqa.org</url>
        </repository>

	<!-- Jetty 5.1.x and HSQLDB are currently required by Adito and are
	     available from this Maven2 repository -->

	<!-- IBiblio sometimes responds slowly/not at all. If that happens
	     and you already have the necessary modules, commenting this
	     repository out helps. There seems not to be a timeout value
	     that could be set, so it may be the only fix -->

        <repository>
            <id>mirrors.ibiblio.org</id>
            <name>Ibiblio.org Maven2 repository</name>
            <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
        </repository>

	<!-- Newest versions of JRADIUS are available at least in
	     OpenNMS repositories but the "radius" plugin does not
	     compile with them. So we have functional RADIUS jar's
	     in our own (pcdog) repository.

        <repository>
            <id>repo.opennms.org</id>
            <name>OpenNMS Maven2 repository</name>
	    <url>http://repo.opennms.org/maven2</url>
        </repository>
	-->

	<!-- A few Adito components are not available in any public Maven2
	     repository. This custom repository contains all the Adito-specific
	     stuff, such as a specific version of JRADIUS -->
        <!-- DEAD
        <repository>
            <id>sjsepp</id>
            <name>Adito Maven2 repository</name>
            <url>http://users.utu.fi/sjsepp/maven2</url>
        </repository>
        -->

        <repository>
            <id>restlet-repo</id>
            <name>Restlet repository</name>
            <url>http://maven.restlet.com</url>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <pluginRepository>
            <id>Codehaus Plugins</id>
            <url>http://repository.codehaus.org/</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </pluginRepository>

	<pluginRepository>
		<id>doodleproject-repo</id>
		<name>DoodleProject Maven 2 Repository</name>
		<url>http://doodleproject.sourceforge.net/maven2/release</url>
		<releases>
			<enabled>true</enabled>
		</releases>
	</pluginRepository>

    </pluginRepositories>
    
    <dependencyManagement>
    </dependencyManagement>
    
    <reporting>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>license</report>
                            <report>summary</report>
                            <report>project-team</report>
                            <report>index</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <!--version>1.0-beta-1</version-->
                <configuration>
                    <!-- threshold>High|Normal|Low|Exp|Ignore</threshold -->
                    <threshold>Normal</threshold>
                    <!-- effort>Min|Default|Max</threshold -->
                    <effort>Default</effort>
                    <visitors>FindDeadLocalStores,UnreadFields</visitors>
                    <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
                    <!-- pluginList>/libs/fb-contrib/fb-contrib-2.8.0.jar</pluginList -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.2-SNAPSHOT</version>
            </plugin>

	    <plugin>
		<groupId>com.agilejava.maven.plugins</groupId>
		<artifactId>maven-overview-plugin</artifactId>
		<version>1.2</version>
	    </plugin>
	
	    <plugin>
		<groupId>net.sf.doodleproject</groupId>
		<artifactId>doxygen-maven-plugin</artifactId>
		<configuration>
			<doxygen>
				<generateHtml>true</generateHtml>
				<input>${basedir}/src/main/java</input>
				<filePatterns>*.java</filePatterns>
				<recursive>true</recursive>
			</doxygen>
		</configuration>
	    </plugin>

        </plugins>
    </reporting>
    
    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>1.0-beta-2</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>site</goal>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
        </plugins>

    <pluginManagement>
      <plugins>

	<!-- We can't define maven-assembly-plugin in this main pom.xml because
	     we it would force us to create valid descriptors for every module,
	     whereas we only need assemblies for the extensions (e.g. unix or
	     networkplaces). Also, the requirements for the assembly vary
	     according to module name (webapp vs. maverick-* vs. extensions). -->
      </plugins>
    </pluginManagement>


    </build>
    
    <profiles>
        <profile>
            <id>default-tools.jar</id>
            <activation>
                <property>
                    <name>java.vendor</name>
                    <value>Sun Microsystems Inc.</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun</groupId>
                    <artifactId>tools</artifactId>
                    <version>1.5.0</version>
                    <scope>system</scope>
                    <systemPath>${java.home}/../lib/tools.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
 </profiles>
</project>
